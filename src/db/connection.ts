import postgres from "postgres";
import { env } from "../env.ts";
import { schema } from "./schema/schema.ts";
import { drizzle } from "drizzle-orm/postgres-js";

// ConfiguraÃ§Ã£o otimizada do pool de conexÃµes
export const client = postgres(env.DATABASE_URL, {
  max: 20, // MÃ¡ximo de conexÃµes no pool
  idle_timeout: 20, // Tempo mÃ¡ximo que uma conexÃ£o pode ficar ociosa
  connect_timeout: 10, // Timeout para estabelecer conexÃ£o
  max_lifetime: 60 * 30, // Tempo mÃ¡ximo de vida de uma conexÃ£o (30 minutos)
  prepare: true, // Habilitar prepared statements
  ssl: env.IS_PRODUCTION ? { rejectUnauthorized: false } : false,
  onnotice: () => {}, // Suprimir notificaÃ§Ãµes do PostgreSQL
  connection: {
    application_name: 'agendly-backend'
  }
});

export const db = drizzle(client, {
  schema,
  casing: 'snake_case',
});

// FunÃ§Ã£o para fechar conexÃµes graciosamente
export async function closeDatabase() {
  await client.end();
}

// Graceful shutdown
process.on('SIGINT', async () => {
  console.log('ğŸ”„ Fechando conexÃµes do banco...');
  await closeDatabase();
  process.exit(0);
});

process.on('SIGTERM', async () => {
  console.log('ğŸ”„ Fechando conexÃµes do banco...');
  await closeDatabase();
  process.exit(0);
});
  